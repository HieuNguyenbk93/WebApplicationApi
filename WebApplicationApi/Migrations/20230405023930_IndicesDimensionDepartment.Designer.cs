// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationApi.Data;

#nullable disable

namespace WebApplicationApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230405023930_IndicesDimensionDepartment")]
    partial class IndicesDimensionDepartment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationApi.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte>("LevelDepartment")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("WebApplicationApi.Data.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dimension", (string)null);
                });

            modelBuilder.Entity("WebApplicationApi.Data.DimensionsIndices", b =>
                {
                    b.Property<int>("IdSetOfIndices")
                        .HasColumnType("int");

                    b.Property<int>("IdDimenssion")
                        .HasColumnType("int");

                    b.Property<int>("NumOfOrder")
                        .HasColumnType("int");

                    b.Property<string>("ViewOfOrder")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdSetOfIndices", "IdDimenssion");

                    b.HasIndex("IdDimenssion");

                    b.ToTable("DimensionsIndices");
                });

            modelBuilder.Entity("WebApplicationApi.Data.SetOfIndices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IdDepartmentRate")
                        .HasColumnType("int");

                    b.Property<bool>("IsRated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartmentRate");

                    b.ToTable("SetOfIndices", (string)null);
                });

            modelBuilder.Entity("WebApplicationApi.Data.DimensionsIndices", b =>
                {
                    b.HasOne("WebApplicationApi.Data.Dimension", "Dimension")
                        .WithMany("DimensionsIndices")
                        .HasForeignKey("IdDimenssion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationApi.Data.SetOfIndices", "SetOfIndices")
                        .WithMany("DimensionsIndices")
                        .HasForeignKey("IdSetOfIndices")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimension");

                    b.Navigation("SetOfIndices");
                });

            modelBuilder.Entity("WebApplicationApi.Data.SetOfIndices", b =>
                {
                    b.HasOne("WebApplicationApi.Data.Department", "DepartmentRate")
                        .WithMany("SetOfIndices")
                        .HasForeignKey("IdDepartmentRate");

                    b.Navigation("DepartmentRate");
                });

            modelBuilder.Entity("WebApplicationApi.Data.Department", b =>
                {
                    b.Navigation("SetOfIndices");
                });

            modelBuilder.Entity("WebApplicationApi.Data.Dimension", b =>
                {
                    b.Navigation("DimensionsIndices");
                });

            modelBuilder.Entity("WebApplicationApi.Data.SetOfIndices", b =>
                {
                    b.Navigation("DimensionsIndices");
                });
#pragma warning restore 612, 618
        }
    }
}
